{"version":3,"sources":["login/scripts/login_view.min.js"],"names":["LoginView","Backbone","View","extend","tagName","template","_","doLogin","this","model","showLogin","$originatingElement","$el","find","then","history","stop","start","doLogout","cotLogin","logout","events","click .btn-login","click .btn-logout","requireLogin","options","_this","Promise","resolve","checkLogin","catch","reject","render","html","toJSON","_this2","arguments","length","undefined","modal","cot_app","showModal","title","body","loginMessage","footerButtonsHtml","originatingElement","$","className","onShown","onLogin","_login","click","keydown","e","charCode","keyCode","onHidden","initialize","listenTo"],"mappings":"AAAA,aAKA,IAAIA,UAAYC,SAASC,KAAKC,OAAO,CAInCC,QAAS,OAETC,SAAUC,EAAED,SAAS,kaAIrBE,QAAS,WACPC,KAAKC,MAAMC,UAAU,CAAEC,oBAAqBH,KAAKI,IAAIC,KAAK,YAAaC,KAAK,WAC1Eb,SAASc,QAAQC,OACjBf,SAASc,QAAQE,WAIrBC,SAAU,WACRV,KAAKC,MAAMU,SAASC,UAGtBC,OAAQ,CACNC,mBAAoB,UACpBC,oBAAqB,YAKvBC,aAAc,SAAsBC,GAClC,IAAIC,EAAQlB,KAEZ,OAAOmB,QAAQC,UAAUd,KAAK,WAC5B,OAAOY,EAAMjB,MAAMoB,WAAWJ,KAC7BK,MAAM,WACP,OAAOJ,EAAMhB,UAAUe,KACtBK,MAAM,WAEP,OADAJ,EAAMjB,MAAMW,SACLO,QAAQI,YAKnBC,OAAQ,WAEN,OADAxB,KAAKI,IAAIqB,KAAKzB,KAAKH,SAAS,CAAEI,MAAOD,KAAKC,MAAMyB,YACzCP,QAAQC,WAGjBlB,UAAW,WACT,IAAIyB,EAAS3B,KAETiB,EAA6B,EAAnBW,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAMlF,OAJI5B,KAAKC,MAAMU,SAASoB,OACtB/B,KAAKC,MAAMU,SAASoB,MAAMA,MAAM,QAG3B,IAAIZ,QAAQ,SAAUC,EAASG,GACpCI,EAAO1B,MAAMU,SAASoB,MAAQC,QAAQC,UAAU,CAC9CC,MAAO,aACPC,KAAM,eAAiBR,EAAO1B,MAAMU,SAASM,QAAQmB,aAAe,gcACpEC,kBAAmB,iMACnBC,mBAAoBrB,EAAQd,qBAAuBoC,EAAEZ,EAAO1B,MAAMU,SAASM,QAAyB,iBAAGZ,KAAK,WAC5GmC,UAAW,kBACXC,QAAS,WACP,SAASC,IACP1C,KAAKC,MAAMU,SAASgC,SAEtBhB,EAAO1B,MAAMU,SAASoB,MAAM1B,KAAK,kBAAkBuC,MAAM,WACvDF,MAEFf,EAAO1B,MAAMU,SAASoB,MAAM1B,KAAK,qBAAqBwC,QAAQ,SAAUC,GAC/B,MAAlCA,EAAEC,UAAYD,EAAEE,SAAW,IAC9BN,OAINO,SAAU,WACRtB,EAAO1B,MAAMoB,WAAWJ,GAASX,KAAK,WACpCc,KACC,WACDG,YAUV2B,WAAY,WACuB,EAAnBtB,UAAUC,aAA+BC,IAAjBF,UAAU,IAAmBA,UAAU,GAE7E5B,KAAKmD,SAASnD,KAAKC,MAAO,SAAUD,KAAKwB","file":"login_view.min.js","sourcesContent":["'use strict';\n\n/* global _ Backbone cot_app */\n\n/* exported LoginView */\nvar LoginView = Backbone.View.extend({\n\n  // PROPERTY DEFINITION\n\n  tagName: 'form',\n\n  template: _.template('\\n    <span class=\"visible-print-inline\">Logged in as</span>\\n    <%= model.lastName || \\'\\' %><%= model.lastName && model.firstName  ? \\',\\' : \\'\\' %>\\n    <%= model.firstName || \\'\\' %>\\n    <% if (model.sid == null) { %>\\n    <button type=\"button\" class=\"btn btn-primary btn-login\">Login</button>\\n    <% } else { %>\\n    <button type=\"button\" class=\"btn btn-default btn-logout\">Logout</button>\\n    <% } %>\\n  '),\n\n  // EVENT HANDLER DEFINITION\n\n  doLogin: function doLogin() {\n    this.model.showLogin({ $originatingElement: this.$el.find('button') }).then(function () {\n      Backbone.history.stop();\n      Backbone.history.start();\n    });\n  },\n\n  doLogout: function doLogout() {\n    this.model.cotLogin.logout();\n  },\n\n  events: {\n    'click .btn-login': 'doLogin',\n    'click .btn-logout': 'doLogout'\n  },\n\n  // METHOD DEFINITION\n\n  requireLogin: function requireLogin(options) {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.model.checkLogin(options);\n    }).catch(function () {\n      return _this.showLogin(options);\n    }).catch(function () {\n      _this.model.logout();\n      return Promise.reject();\n    });\n  },\n\n\n  render: function render() {\n    this.$el.html(this.template({ model: this.model.toJSON() }));\n    return Promise.resolve();\n  },\n\n  showLogin: function showLogin() {\n    var _this2 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.model.cotLogin.modal) {\n      this.model.cotLogin.modal.modal('hide');\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this2.model.cotLogin.modal = cot_app.showModal({\n        title: 'User Login',\n        body: '\\n          ' + _this2.model.cotLogin.options.loginMessage + '\\n          <form>\\n            <div class=\"form-group\">\\n              <label for=\"cot_login_username\">Username</label>:\\n              <input class=\"form-control\" id=\"cot_login_username\">\\n            </div>\\n            <div class=\"form-group\">\\n              <label for=\"cot_login_password\">Password</label>:\\n              <input class=\"form-control\" type=\"password\" id=\"cot_login_password\">\\n            </div>\\n          </form>\\n        ',\n        footerButtonsHtml: '\\n          <button class=\"btn btn-success\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\\n          <button class=\"btn btn-success btn-cot-login\" type=\"button\">Login</button>\\n        ',\n        originatingElement: options.$originatingElement || $(_this2.model.cotLogin.options['welcomeSelector']).find('a.login'),\n        className: 'cot-login-modal',\n        onShown: function onShown() {\n          function onLogin() {\n            this.model.cotLogin._login();\n          }\n          _this2.model.cotLogin.modal.find('.btn-cot-login').click(function () {\n            onLogin();\n          });\n          _this2.model.cotLogin.modal.find('.modal-body input').keydown(function (e) {\n            if ((e.charCode || e.keyCode || 0) === 13) {\n              onLogin();\n            }\n          });\n        },\n        onHidden: function onHidden() {\n          _this2.model.checkLogin(options).then(function () {\n            resolve();\n          }, function () {\n            reject();\n          });\n        }\n      });\n    });\n  },\n\n\n  // INITIALIZER DEFINITION\n\n  initialize: function initialize() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.listenTo(this.model, 'change', this.render);\n  }\n});"]}