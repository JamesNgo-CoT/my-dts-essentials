"use strict";var LoginView=Backbone.View.extend({$modal:null,tagName:"form",template:_.template('\n    <span class="visible-print-inline">Logged in as</span>\n    <%= model.lastName || \'\' %><%= model.lastName && model.firstName  ? \',\' : \'\' %>\n    <%= model.firstName || \'\' %>\n    <% if (model.sid == null) { %>\n    <button type="button" class="btn btn-primary btn-login">Login</button>\n    <% } else { %>\n    <button type="button" class="btn btn-default btn-logout">Logout</button>\n    <% } %>\n  '),doLogin:function(){this.showLogin({$originatingElement:this.$el.find("button")}).then(function(){Backbone.history.stop(),Backbone.history.start()})},doLogout:function(){this.model.cotLogin.logout()},events:{"click .btn-login":"doLogin","click .btn-logout":"doLogout"},requireLogin:function(n){var o=this;return Promise.resolve().then(function(){return o.model.checkLogin(n)}).catch(function(){return o.showLogin(n)}).catch(function(){return o.model.logout(),Promise.reject()})},render:function(){return this.$el.html(this.template({model:this.model.toJSON()})),Promise.resolve()},showLogin:function(){var t=this,i=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return this.$modal&&this.$modal.modal("hide"),new Promise(function(n,o){t.$modal=cot_app.showModal({title:"User Login",body:"\n          "+t.model.cotLogin.options.loginMessage+'\n          <form>\n            <div class="form-group">\n              <label for="cot_login_username">Username</label>:\n              <input class="form-control" id="cot_login_username">\n            </div>\n            <div class="form-group">\n              <label for="cot_login_password">Password</label>:\n              <input class="form-control" type="password" id="cot_login_password">\n            </div>\n          </form>\n        ',footerButtonsHtml:'\n          <button class="btn btn-success" type="button" data-dismiss="modal">Cancel</button>\n          <button class="btn btn-success btn-cot-login" type="button">Login</button>\n        ',originatingElement:i.$originatingElement||$(t.model.cotLogin.options.welcomeSelector).find("a.login"),className:"cot-login-modal",onShown:function(){var o=function(){t.$modal.find(".btn").prop("disabled",!0);var n=t.$modal.find("#cot_login_username").val(),o=t.$modal.find("#cot_login_password").val();n&&o?t.model.login(n,o).then(function(){t.$modal.modal("hide"),t.$modal.find(".btn").prop("disabled",!1)},function(n){var o=function(n){$('<div class="alert alert-danger" role="alert">'+n+"</div>").prependTo(t.$modal.find(".modal-body")).fadeOut(5e3,function(){$(this).remove()})};o("invalid_user_or_pwd"===n?"Invalid username or password.":"Unable to log in. Please try again."),t.$modal.find(".btn").prop("disabled",!1)}):t.$modal.find(".btn").prop("disabled",!1)};t.$modal.find(".btn-cot-login").click(function(){o()}),t.$modal.find(".modal-body input").keydown(function(n){13===(n.charCode||n.keyCode||0)&&o()})},onHidden:function(){t.model.checkLogin(i).then(function(){n()},function(){o()})}})})},initialize:function(){0<arguments.length&&void 0!==arguments[0]&&arguments[0];this.listenTo(this.model,"change",this.render)}});
//# sourceMappingURL=login_view.min.js.map
