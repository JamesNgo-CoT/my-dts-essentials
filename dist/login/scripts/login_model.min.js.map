{"version":3,"sources":["login/scripts/login_model.min.js"],"names":["LoginModel","Backbone","Model","extend","cotLogin","checkLogin","_this","this","arguments","length","undefined","serverSide","Promise","resolve","reject","session","isLoggedIn","result","CotSession","LOGIN_CHECK_RESULT_TRUE","requireLogin","options","_this2","then","catch","showLogin","logout","_this3","modal","cot_app","showModal","title","body","loginMessage","footerButtonsHtml","originatingElement","$originatingElement","$","find","className","onShown","click","_login","keydown","e","charCode","keyCode","onHidden","initialize","attributes","_this4","cot_login","onLogin","set"],"mappings":"AAAA,aAKA,IAAIA,WAAaC,SAASC,MAAMC,OAAO,CAIrCC,SAAU,KAIVC,WAAY,WACV,IAAIC,EAAQC,KAIZ,OAFiC,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,IAErEG,WAIN,IAAIC,QAAQ,SAAUC,EAASC,GACpCR,EAAMF,SAASW,QAAQC,WAAW,SAAUC,GACtCA,IAAWC,WAAWC,wBACxBN,IAEAC,QARGP,KAAKH,SAASY,aAAeJ,QAAQC,UAAYD,QAAQE,UAcpEM,aAAc,SAAsBC,GAClC,IAAIC,EAASf,KAEb,OAAOK,QAAQC,UAAUU,KAAK,WAC5B,OAAOD,EAAOjB,WAAWgB,KACxBG,MAAM,WACP,OAAOF,EAAOG,UAAUJ,KACvBG,MAAM,WAEP,OADAF,EAAOlB,SAASsB,SACTd,QAAQE,YAGnBW,UAAW,WACT,IAAIE,EAASpB,KAETc,EAA6B,EAAnBb,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAMlF,OAJID,KAAKH,SAASwB,OAChBrB,KAAKH,SAASwB,MAAMA,MAAM,QAGrB,IAAIhB,QAAQ,SAAUC,EAASC,GACpCa,EAAOvB,SAASwB,MAAQC,QAAQC,UAAU,CACxCC,MAAO,aACPC,KAAM,eAAiBL,EAAOvB,SAASiB,QAAQY,aAAe,gcAC9DC,kBAAmB,iMACnBC,mBAAoBd,EAAQe,qBAAuBC,EAAEV,EAAOvB,SAASiB,QAAyB,iBAAGiB,KAAK,WACtGC,UAAW,kBACXC,QAAS,WACPb,EAAOvB,SAASwB,MAAMU,KAAK,kBAAkBG,MAAM,WACjDd,EAAOvB,SAASsC,WAElBf,EAAOvB,SAASwB,MAAMU,KAAK,qBAAqBK,QAAQ,SAAUC,GACzB,MAAlCA,EAAEC,UAAYD,EAAEE,SAAW,IAC9BnB,EAAOvB,SAASsC,YAItBK,SAAU,WACRpB,EAAOtB,WAAWgB,GAASE,KAAK,WAC9BV,KACC,WACDC,YAUVkC,WAAY,SAAoBC,EAAY5B,GAC1C,IAAI6B,EAAS3C,KAEbA,KAAKH,SAAW,IAAI+C,UAAUd,EAAElC,OAAOkB,EAAS,CAC9C+B,QAAS,SAAiBhD,GACxB8C,EAAOG,IAAIjD","file":"login_model.min.js","sourcesContent":["'use strict';\n\n/* global Backbone cot_app cot_login CotSession */\n\n/* exported LoginModel */\nvar LoginModel = Backbone.Model.extend({\n\n  // PROPERTY DEFINITION\n\n  cotLogin: null,\n\n  // METHOD DEFINITION\n\n  checkLogin: function checkLogin() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!options.serverSide) {\n      return this.cotLogin.isLoggedIn() ? Promise.resolve() : Promise.reject();\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.cotLogin.session.isLoggedIn(function (result) {\n        if (result === CotSession.LOGIN_CHECK_RESULT_TRUE) {\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  },\n\n  requireLogin: function requireLogin(options) {\n    var _this2 = this;\n\n    return Promise.resolve().then(function () {\n      return _this2.checkLogin(options);\n    }).catch(function () {\n      return _this2.showLogin(options);\n    }).catch(function () {\n      _this2.cotLogin.logout();\n      return Promise.reject();\n    });\n  },\n  showLogin: function showLogin() {\n    var _this3 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.cotLogin.modal) {\n      this.cotLogin.modal.modal('hide');\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this3.cotLogin.modal = cot_app.showModal({\n        title: 'User Login',\n        body: '\\n          ' + _this3.cotLogin.options.loginMessage + '\\n          <form>\\n            <div class=\"form-group\">\\n              <label for=\"cot_login_username\">Username</label>:\\n              <input class=\"form-control\" id=\"cot_login_username\">\\n            </div>\\n            <div class=\"form-group\">\\n              <label for=\"cot_login_password\">Password</label>:\\n              <input class=\"form-control\" type=\"password\" id=\"cot_login_password\">\\n            </div>\\n          </form>\\n        ',\n        footerButtonsHtml: '\\n          <button class=\"btn btn-success\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\\n          <button class=\"btn btn-success btn-cot-login\" type=\"button\">Login</button>\\n        ',\n        originatingElement: options.$originatingElement || $(_this3.cotLogin.options['welcomeSelector']).find('a.login'),\n        className: 'cot-login-modal',\n        onShown: function onShown() {\n          _this3.cotLogin.modal.find('.btn-cot-login').click(function () {\n            _this3.cotLogin._login();\n          });\n          _this3.cotLogin.modal.find('.modal-body input').keydown(function (e) {\n            if ((e.charCode || e.keyCode || 0) === 13) {\n              _this3.cotLogin._login();\n            }\n          });\n        },\n        onHidden: function onHidden() {\n          _this3.checkLogin(options).then(function () {\n            resolve();\n          }, function () {\n            reject();\n          });\n        }\n      });\n    });\n  },\n\n\n  // CONSTRUCTOR DEFINITION\n\n  initialize: function initialize(attributes, options) {\n    var _this4 = this;\n\n    this.cotLogin = new cot_login($.extend(options, {\n      onLogin: function onLogin(cotLogin) {\n        _this4.set(cotLogin);\n      }\n    }));\n  }\n});"]}