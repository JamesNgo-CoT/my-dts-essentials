{"version":3,"sources":["login/scripts/login_model.min.js"],"names":["LoginModel","Backbone","Model","extend","cotLogin","checkLogin","_this","this","arguments","length","undefined","serverSide","Promise","resolve","reject","session","isLoggedIn","result","CotSession","LOGIN_CHECK_RESULT_TRUE","login","username","password","_this2","error","jqXHR","textStatus","_error","success","_setUserName","logout","initialize","attributes","options","_this3","cot_login","$","onLogin","set"],"mappings":"AAAA,aAKA,IAAIA,WAAaC,SAASC,MAAMC,OAAO,CAIrCC,SAAU,KAIVC,WAAY,WACV,IAAIC,EAAQC,KAIZ,OAFiC,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,IAErEG,WAIN,IAAIC,QAAQ,SAAUC,EAASC,GACpCR,EAAMF,SAASW,QAAQC,WAAW,SAAUC,GACtCA,IAAWC,WAAWC,wBACxBN,IAEAC,QARGP,KAAKH,SAASY,aAAeJ,QAAQC,UAAYD,QAAQE,UAcpEM,MAAO,SAAeC,EAAUC,GAC9B,IAAIC,EAAShB,KAEb,OAAO,IAAIK,QAAQ,SAAUC,EAASC,GACpCS,EAAOnB,SAASW,QAAQK,MAAM,CAC5BI,MAAO,SAAeC,EAAOC,EAAYC,GACvCb,EAAOa,IAETN,SAAUA,EACVC,SAAUA,EACVM,QAAS,WACPL,EAAOnB,SAASyB,eAChBhB,UAMRiB,OAAQ,WACNvB,KAAKH,SAAS0B,UAKhBC,WAAY,SAAoBC,EAAYC,GAC1C,IAAIC,EAAS3B,KAEbA,KAAKH,SAAW,IAAI+B,UAAUC,EAAEjC,OAAO8B,EAAS,CAC9CI,QAAS,SAAiBjC,GACxB8B,EAAOI,IAAIlC","file":"login_model.min.js","sourcesContent":["\"use strict\";\n\n/* global Backbone cot_login CotSession */\n\n/* exported LoginModel */\nvar LoginModel = Backbone.Model.extend({\n\n  // PROPERTY DEFINITION\n\n  cotLogin: null,\n\n  // METHOD DEFINITION\n\n  checkLogin: function checkLogin() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!options.serverSide) {\n      return this.cotLogin.isLoggedIn() ? Promise.resolve() : Promise.reject();\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.cotLogin.session.isLoggedIn(function (result) {\n        if (result === CotSession.LOGIN_CHECK_RESULT_TRUE) {\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  },\n\n  login: function login(username, password) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      _this2.cotLogin.session.login({\n        error: function error(jqXHR, textStatus, _error) {\n          reject(_error);\n        },\n        username: username,\n        password: password,\n        success: function success() {\n          _this2.cotLogin._setUserName();\n          resolve();\n        }\n      });\n    });\n  },\n\n  logout: function logout() {\n    this.cotLogin.logout();\n  },\n\n  // CONSTRUCTOR DEFINITION\n\n  initialize: function initialize(attributes, options) {\n    var _this3 = this;\n\n    this.cotLogin = new cot_login($.extend(options, {\n      onLogin: function onLogin(cotLogin) {\n        _this3.set(cotLogin);\n      }\n    }));\n  }\n});"]}