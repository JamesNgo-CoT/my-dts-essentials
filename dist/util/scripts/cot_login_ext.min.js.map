{"version":3,"sources":["util/scripts/cot_login_ext.min.js"],"names":["CotSession","prototype","isLoggedIn","serverCheckCallback","_this","this","_cookie","logout","sid","url","options","ccApiOrigin","ccApiPath","ccApiEndpoint","indexOf","$","get","done","data","app","rsid","error","appName","_storeLogin","LOGIN_CHECK_RESULT_TRUE","LOGIN_CHECK_RESULT_FALSE","LOGIN_CHECK_RESULT_INDETERMINATE","fail","login","_this2","extend","username","password","success","jqXHR","textStatus","_error","always","payload","user","pwd","ajaxSettings","method","contentType","JSON","stringify","ajax"],"mappings":"AAAA,aAIAA,WAAWC,UAAUC,WAAa,SAAUC,GAC1C,IAAIC,EAAQC,KAEZ,IAAKF,EACH,QAAIE,KAAKC,QAAQ,SAGfD,KAAKE,UACE,GAGT,IAAIC,EAAMH,KAAKG,KAAOH,KAAKC,QAAQ,OACnC,GAAKE,EAEE,CACL,IAAIC,EAAM,GAAKJ,KAAKK,QAAQC,YAAcN,KAAKK,QAAQE,UAAYP,KAAKK,QAAQG,cAChFJ,IAA8D,IAA5CA,EAAIK,QAAQ,2BAAoC,KAAQN,EAAM,KAAQ,IAAMA,EAC9FO,EAAEC,IAAIP,GAAKQ,KAAK,SAAUC,GACxB,IAAIC,EAAMD,EAAU,KAAK,GACrBE,EAAOF,EAAU,KAAK,GACtBG,EAAQH,EAAY,OAAK,GACzBC,IAAQf,EAAMM,QAAQY,SAAWF,IAASZ,GAC5CJ,EAAMmB,YAAYL,GAClBf,EAAoBH,WAAWwB,0BACZ,oBAAVH,GACTjB,EAAMG,SACNJ,EAAoBH,WAAWyB,2BAE/BtB,EAAoBH,WAAW0B,oCAEhCC,KAAK,WACNxB,EAAoBH,WAAW0B,yCAlBjCvB,EAAoBH,WAAWyB,2BAwBrCzB,WAAWC,UAAU2B,MAAQ,SAAUlB,GACrC,IAAImB,EAASxB,KAEbK,EAAUK,EAAEe,OAAO,CACjBC,SAAU,GACVC,SAAU,GACVC,QAAS,aACTZ,MAAO,SAAea,EAAOC,EAAYC,KACzCC,OAAQ,cACP3B,GAEH,IAAI4B,EAAU,CAAEnB,IAAKd,KAAKK,QAAQY,QAASiB,KAAM7B,EAAQqB,SAAUS,IAAK9B,EAAQsB,UAE5EvB,EAAM,GAAKJ,KAAKK,QAAQC,YAAcN,KAAKK,QAAQE,UAAYP,KAAKK,QAAQG,cAG5E4B,GAA2D,KAF/DhC,IAA8D,IAA5CA,EAAIK,QAAQ,2BAAoC,GAAK,QAAUT,KAAKK,QAAQY,SAEvER,QAAQ,2BAAoC,CAAEI,KAAMoB,EAASI,OAAQ,QAAW,CAAEC,YAAa,mBAAoBzB,KAAM0B,KAAKC,UAAUP,GAAUI,OAAQ,QACjLD,EAAahC,IAAMA,EAEnBM,EAAE+B,KAAKL,GAAcxB,KAAK,SAAUC,GAC9BA,EAAY,MACdR,EAAQW,MAAM,KAAqB,wBAAfH,EAAKG,MAAkC,+BAAiC,eAAgBH,EAAKG,OACxGH,EAAwB,kBACjCR,EAAQW,MAAM,KAAM,mBAAoB,sBAExCQ,EAAON,YAAYL,GACnBR,EAAQuB,aAETN,KAAK,SAAUO,EAAOC,EAAYd,GACnCX,EAAQW,MAAMa,EAAOC,EAAYd,KAChCgB,OAAO,WACR3B,EAAQ2B","file":"cot_login_ext.min.js","sourcesContent":["'use strict';\n\n/* global CotSession */\n\nCotSession.prototype.isLoggedIn = function (serverCheckCallback) {\n  var _this = this;\n\n  if (!serverCheckCallback) {\n    if (this._cookie('sid')) {\n      return true;\n    } else {\n      this.logout();\n      return false;\n    }\n  } else {\n    var sid = this.sid || this._cookie('sid');\n    if (!sid) {\n      serverCheckCallback(CotSession.LOGIN_CHECK_RESULT_FALSE);\n    } else {\n      var url = '' + this.options.ccApiOrigin + this.options.ccApiPath + this.options.ccApiEndpoint;\n      url = '' + url + (url.indexOf('/cc_sr_admin_v1/session') === -1 ? '(\\'' + sid + '\\')' : '/' + sid);\n      $.get(url).done(function (data) {\n        var app = data['app'] || '',\n            rsid = data['sid'] || '',\n            error = data['error'] || '';\n        if (app === _this.options.appName && rsid === sid) {\n          _this._storeLogin(data);\n          serverCheckCallback(CotSession.LOGIN_CHECK_RESULT_TRUE);\n        } else if (error === 'no_such_session') {\n          _this.logout();\n          serverCheckCallback(CotSession.LOGIN_CHECK_RESULT_FALSE);\n        } else {\n          serverCheckCallback(CotSession.LOGIN_CHECK_RESULT_INDETERMINATE);\n        }\n      }).fail(function () {\n        serverCheckCallback(CotSession.LOGIN_CHECK_RESULT_INDETERMINATE);\n      });\n    }\n  }\n};\n\nCotSession.prototype.login = function (options) {\n  var _this2 = this;\n\n  options = $.extend({\n    username: '',\n    password: '',\n    success: function success() {},\n    error: function error(jqXHR, textStatus, _error) {},\n    always: function always() {}\n  }, options);\n\n  var payload = { app: this.options.appName, user: options.username, pwd: options.password };\n\n  var url = '' + this.options.ccApiOrigin + this.options.ccApiPath + this.options.ccApiEndpoint;\n  url = '' + url + (url.indexOf('/cc_sr_admin_v1/session') === -1 ? '' : '?app=' + this.options.appName);\n\n  var ajaxSettings = url.indexOf('/cc_sr_admin_v1/session') !== -1 ? { data: payload, method: 'POST' } : { contentType: 'application/json', data: JSON.stringify(payload), method: 'POST' };\n  ajaxSettings.url = url;\n\n  $.ajax(ajaxSettings).done(function (data) {\n    if (data['error']) {\n      options.error(null, data.error === 'invalid_user_or_pwd' ? 'Invalid username or password' : 'Login failed', data.error);\n    } else if (data['passwordIsExpired']) {\n      options.error(null, 'Expired password', 'passwordIsExpired');\n    } else {\n      _this2._storeLogin(data);\n      options.success();\n    }\n  }).fail(function (jqXHR, textStatus, error) {\n    options.error(jqXHR, textStatus, error);\n  }).always(function () {\n    options.always();\n  });\n};"]}