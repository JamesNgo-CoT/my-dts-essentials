{"version":3,"sources":["backbone/scripts/odata_datatable_page_view.min.js"],"names":["ODataDataTablePageView","ODataDataTableView","extend","columns","template","_","doButtonCopy","e","preventDefault","this","buttonCopy","doButtonCsv","buttonCsv","doButtonExcel","buttonExcel","doButtonPdf","buttonPdf","doButtonPrint","buttonPrint","doReload","reload","events","$","prototype","click .btn-reload","click .button-copy","click .button-csv","click .button-excel","click .button-pdf","click .button-print","render","options","arguments","length","undefined","console","log","result","datatable","call"],"mappings":"AAAA,aAKA,IAAIA,uBAAyBC,mBAAmBC,OAAO,CAIrDC,QAAS,KAETC,SAAUC,EAAED,SAAS,08CAIrBE,aAAc,SAAsBC,GAClCA,EAAEC,iBACFC,KAAKC,cAGPC,YAAa,SAAqBJ,GAChCA,EAAEC,iBACFC,KAAKG,aAGPC,cAAe,SAAuBN,GACpCA,EAAEC,iBACFC,KAAKK,eAGPC,YAAa,SAAqBR,GAChCA,EAAEC,iBACFC,KAAKO,aAGPC,cAAe,SAAuBV,GACpCA,EAAEC,iBACFC,KAAKS,eAGPC,SAAU,SAAkBZ,GAC1BA,EAAEC,iBACFC,KAAKW,OAAO,MAAM,IAGpBC,OAAQC,EAAEpB,OAAO,GAAID,mBAAmBsB,UAAUF,OAAQ,CACxDG,oBAAqB,WAErBC,qBAAsB,eACtBC,oBAAqB,cACrBC,sBAAuB,gBACvBC,oBAAqB,cACrBC,sBAAuB,kBAKzBC,OAAQ,WACN,IAAIC,EAA6B,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAalF,OAXAG,QAAQC,IAAI,oCAERL,EAAQ5B,QACVM,KAAKN,QAAUE,EAAEgC,OAAON,EAAS,WAEjCA,EAAQ5B,QAAUE,EAAEgC,OAAO5B,KAAM,WAEnCsB,EAAQO,UAAYrC,mBAAmBsB,UAAUnB,SAASmC,KAAK9B,KAAMsB,GAErEI,QAAQC,IAAI,2CAA4CL,GAEjD9B,mBAAmBsB,UAAUO,OAAOS,KAAK9B,KAAMsB","file":"odata_datatable_page_view.min.js","sourcesContent":["'use strict';\n\n/* global _ ODataDataTableView */\n\n/* exported ODataDataTablePageView */\nvar ODataDataTablePageView = ODataDataTableView.extend({\n\n  // PROPERTY DEFINITION\n\n  columns: null,\n\n  template: _.template('\\n    <div>\\n      <button type=\"button\" class=\"btn btn-default btn-reload\">Reload Data</button>\\n      <div class=\"btn-group pull-right\">\\n        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n          Actions <span class=\"caret\"></span>\\n        </button>\\n        <ul class=\"dropdown-menu\">\\n          <li><a href=\"#\" class=\"button-copy\">Copy</a></li>\\n          <li><a href=\"#\" class=\"button-csv\">CSV</a></li>\\n          <li><a href=\"#\" class=\"button-excel\">Excel</a></li>\\n          <li><a href=\"#\" class=\"button-pdf\">PDF</a></li>\\n          <li><a href=\"#\" class=\"button-print\">Print</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <%= datatable %>\\n\\n    <div>\\n      <button type=\"button\" class=\"btn btn-default btn-reload\">Reload Data</button>\\n      <div class=\"btn-group pull-right\">\\n        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n          Actions <span class=\"caret\"></span>\\n        </button>\\n        <ul class=\"dropdown-menu\">\\n          <li><a href=\"#\" class=\"button-copy\">Copy</a></li>\\n          <li><a href=\"#\" class=\"button-csv\">CSV</a></li>\\n          <li><a href=\"#\" class=\"button-excel\">Excel</a></li>\\n          <li><a href=\"#\" class=\"button-pdf\">PDF</a></li>\\n          <li><a href=\"#\" class=\"button-print\">Print</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  '),\n\n  // EVENT HANDLER DEFINITION\n\n  doButtonCopy: function doButtonCopy(e) {\n    e.preventDefault();\n    this.buttonCopy();\n  },\n\n  doButtonCsv: function doButtonCsv(e) {\n    e.preventDefault();\n    this.buttonCsv();\n  },\n\n  doButtonExcel: function doButtonExcel(e) {\n    e.preventDefault();\n    this.buttonExcel();\n  },\n\n  doButtonPdf: function doButtonPdf(e) {\n    e.preventDefault();\n    this.buttonPdf();\n  },\n\n  doButtonPrint: function doButtonPrint(e) {\n    e.preventDefault();\n    this.buttonPrint();\n  },\n\n  doReload: function doReload(e) {\n    e.preventDefault();\n    this.reload(null, true);\n  },\n\n  events: $.extend({}, ODataDataTableView.prototype.events, {\n    'click .btn-reload': 'doReload',\n\n    'click .button-copy': 'doButtonCopy',\n    'click .button-csv': 'doButtonCsv',\n    'click .button-excel': 'doButtonExcel',\n    'click .button-pdf': 'doButtonPDF',\n    'click .button-print': 'doButtonPrint'\n  }),\n\n  // METHOD DEFINITION\n\n  render: function render() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    console.log('ODATA DATATABLE PAGE VIEW RENDER');\n\n    if (options.columns) {\n      this.columns = _.result(options, 'columns');\n    } else {\n      options.columns = _.result(this, 'columns');\n    }\n    options.datatable = ODataDataTableView.prototype.template.call(this, options);\n\n    console.log('ODATA DATATABLE PAGE VIEW RENDER OPTIONS', options);\n\n    return ODataDataTableView.prototype.render.call(this, options);\n  }\n});"]}