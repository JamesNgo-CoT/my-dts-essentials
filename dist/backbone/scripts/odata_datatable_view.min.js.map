{"version":3,"sources":["backbone/scripts/odata_datatable_view.min.js"],"names":["ODataDataTableView","Backbone","View","extend","columns","template","_","doColumnSearch","e","preventDefault","this","dataTable","$input","$","currentTarget","value","val","index","closest","data","dataTableColumn","column","searchString","searchMap","search","draw","events","change tfoot :input","keyup tfoot :input","buttonCopy","$el","find","click","buttonCsv","buttonExcel","buttonPdf","buttonPrint","reload","callback","resetPaging","ajax","remove","destroy","prototype","call","render","_this","options","arguments","length","undefined","console","log","result","collection","toJSON","html","DataTable","settings","fetchData","$count","$filter","filter","array","searchable","map","join","$orderby","order","dir","$search","$select","aoColumns","trim","indexOf","$skip","start","$top","trigger","fetch","then","recordsTotal","count","recordsFiltered","dom","serverSide","Promise","resolve","columnSearchMaps","dateEquals","dataSrc","moment","isValid","format","numberEquals","isNaN","numberExpression","replace","toLowerCase","values","split","stringContains","stringEquals"],"mappings":"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","file":"odata_datatable_view.min.js","sourcesContent":["'use strict';\n\n/* global _ Backbone moment */\n\n/* exported ODataDataTableView */\nvar ODataDataTableView = Backbone.View.extend({\n\n  // PROPERTY DEFINITION\n\n  columns: null,\n\n  template: _.template('\\n    <table class=\"table table-bordered table-striped\">\\n      <thead>\\n        <tr>\\n        <% for (var i = 0, l = columns.length; i < l; i++) { %>\\n          <th><%= columns[i].title || columns[i].data %></th>\\n        <% } %>\\n        </tr>\\n      </thead>\\n      <tfoot>\\n        <tr>\\n        <% for (var i = 0, l = columns.length; i < l; i++) { %>\\n          <td data-index=\"<%= i %>\">\\n          <% if (_.result(columns[i], \\'searchHtml\\')) { %>\\n            <%= _.result(columns[i], \\'searchHtml\\') %>\\n          <% } %>\\n          </td>\\n        <% } %>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  '),\n\n  // EVENT HANDLER DEFINITION\n\n  doColumnSearch: function doColumnSearch(e) {\n    e.preventDefault();\n\n    if (this.dataTable) {\n      var $input = $(e.currentTarget);\n      var value = $input.val();\n      var index = +$input.closest('td').data('index');\n      var dataTableColumn = this.dataTable.column(index);\n\n      var searchString = '';\n\n      if (this.columns[index].searchMap) {\n        searchString = this.columns[index].searchMap(value, dataTableColumn, index) || '';\n      }\n\n      if (searchString !== dataTableColumn.search()) {\n        dataTableColumn.search(searchString);\n        dataTableColumn.draw();\n      }\n    }\n  },\n\n  events: {\n    'change tfoot :input': 'doColumnSearch',\n    'keyup tfoot :input': 'doColumnSearch'\n  },\n\n  // METHOD DEFINITION\n\n  buttonCopy: function buttonCopy() {\n    this.$el.find('.buttons-copy').click();\n  },\n\n  buttonCsv: function buttonCsv() {\n    this.$el.find('.buttons-csv').click();\n  },\n\n  buttonExcel: function buttonExcel() {\n    this.$el.find('.buttons-excel').click();\n  },\n\n  buttonPdf: function buttonPdf() {\n    this.$el.find('.buttons-pdf').click();\n  },\n\n  buttonPrint: function buttonPrint() {\n    this.$el.find('.buttons-print').click();\n  },\n\n  reload: function reload(callback, resetPaging) {\n    if (this.dataTable) {\n      this.dataTable.ajax.reload(callback, resetPaging);\n    }\n  },\n\n  remove: function remove() {\n    if (this.dataTable) {\n      this.dataTable.destroy();\n    }\n\n    Backbone.View.prototype.remove.call(this);\n  },\n\n  render: function render() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    console.log('ODATA DATATABLE VIEW RENDER');\n\n    if (options.columns) {\n      this.columns = _.result(options, 'columns');\n    } else {\n      options.columns = _.result(this, 'columns');\n    }\n\n    console.log('OPTIONS COLUMNS', options.columns);\n\n    options.collection = this.collection.toJSON();\n\n    if (this.dataTable) {\n      this.dataTable.destroy();\n    }\n\n    this.$el.html(this.template(options));\n\n    console.log('$EL', this.$el, this.$el.html());\n\n    console.log('COLUMNS', _.result(this, 'columns'));\n\n    this.dataTable = this.$el.find('table').DataTable({\n      ajax: function ajax(data, callback, settings) {\n        var fetchData = {};\n\n        // $count\n        fetchData.$count = true;\n\n        console.log('FETCH DATA', fetchData);\n\n        // $filter\n        var $filter = data.columns.filter(function (value, index, array) {\n          return value.searchable && value.search && value.search.value;\n        }).map(function (value, index, array) {\n          return value.search.value;\n        }).join(' and ');\n        if ($filter) {\n          fetchData.$filter = $filter;\n        }\n\n        console.log('FETCH DATA', fetchData);\n\n        // $orderby\n        fetchData.$orderby = data.order.map(function (value) {\n          return data.columns[value.column].data + ' ' + value.dir;\n        }).join(',');\n\n        console.log('FETCH DATA', fetchData);\n\n        // $search\n        if (data.search && data.search.value) {\n          fetchData.$search = '\"' + data.search.value + '\"';\n        }\n\n        console.log('FETCH DATA', fetchData);\n\n        // $select\n        var $select = settings.aoColumns.map(function (value) {\n          return value.data;\n        }).map(function (value) {\n          return $.trim(value);\n        }).filter(function (value, index, array) {\n          return array.indexOf(value) === index;\n        }).join(',');\n        if ($select) {\n          fetchData.$select = $select;\n        }\n\n        console.log('FETCH DATA', fetchData);\n\n        // $skip\n        fetchData.$skip = data.start;\n\n        // $top\n        fetchData.$top = data.length;\n\n        console.log('FETCH DATA', fetchData);\n\n        _this.trigger('loadStart');\n        _this.collection.fetch({ data: fetchData }).then(function () {\n          _this.trigger('loadEnd');\n          callback({\n            data: _this.collection.toJSON(),\n            draw: data.draw,\n            recordsTotal: _this.collection.count || 0,\n            recordsFiltered: _this.collection.count || 0\n          });\n        });\n      },\n      columns: _.result(this, 'columns'),\n      dom: '<\\'row\\'<\\'col-sm-6\\'l><\\'col-sm-6\\'f>><\\'row\\'<\\'col-sm-12\\'<\\'table-responsive\\'tr>>><\\'row\\'<\\'col-sm-5\\'i><\\'col-sm-7\\'p>>B',\n      order: options.order || null,\n      serverSide: true\n    });\n\n    return Promise.resolve();\n  }\n}, {\n  columnSearchMaps: {\n    dateEquals: function dateEquals(value, dataTableColumn, index) {\n      var searchString = '';\n\n      if (value) {\n        if (value === 'NULL') {\n          searchString = dataTableColumn.dataSrc() + ' eq null';\n        } else if (value === '!NULL') {\n          searchString = dataTableColumn.dataSrc() + ' ne null';\n        } else if (moment(value, 'l').isValid()) {\n          searchString = dataTableColumn.dataSrc() + ' eq ' + moment(value, 'l').format();\n        }\n      }\n\n      return searchString;\n    },\n\n    numberEquals: function numberEquals(value, dataTableColumn, index) {\n      var searchString = '';\n\n      if (value) {\n        if (value === 'NULL') {\n          searchString = dataTableColumn.dataSrc() + ' eq null';\n        } else if (value === '!NULL') {\n          searchString = dataTableColumn.dataSrc() + ' ne null';\n        } else if (isNaN(value)) {\n          searchString = dataTableColumn.dataSrc() + ' eq ' + value;\n        }\n      }\n\n      return searchString;\n    },\n\n    numberExpression: function numberExpression(value, dataTableColumn, index) {\n      var searchString = '';\n\n      value = $.trim(value);\n      if (value) {\n        if (value.indexOf('!=') === 0) {\n          value = $.trim(value.replace('!=', ''));\n          if (value) {\n            if (value === 'NULL') {\n              searchString = dataTableColumn.dataSrc() + ' ne null';\n            } else if (value === '!NULL') {\n              searchString = dataTableColumn.dataSrc() + ' eq null';\n            } else if (!isNaN(value)) {\n              searchString = dataTableColumn.dataSrc() + ' ne ' + value;\n            }\n          }\n        } else if (value.indexOf('>=') === 0) {\n          value = $.trim(value.replace('>=', ''));\n          if (value && !isNaN(value)) {\n            searchString = dataTableColumn.dataSrc() + ' ge ' + value;\n          }\n        } else if (value.indexOf('>') === 0) {\n          value = $.trim(value.replace('>', ''));\n          if (value && !isNaN(value)) {\n            searchString = dataTableColumn.dataSrc() + ' gt ' + value;\n          }\n        } else if (value.indexOf('<=') === 0) {\n          value = $.trim(value.replace('<=', ''));\n          if (value && !isNaN(value)) {\n            searchString = dataTableColumn.dataSrc() + ' le ' + value;\n          }\n        } else if (value.indexOf('<') === 0) {\n          value = $.trim(value.replace('<', ''));\n          if (value && !isNaN(value)) {\n            searchString = dataTableColumn.dataSrc() + ' lt ' + value;\n          }\n        } else if (value.indexOf('-') !== -1 || value.toLowerCase().indexOf('to') !== -1) {\n          value = value.replace(/to/ig, '-');\n          var values = value.split('-').map(function (value) {\n            return $.trim(value);\n          });\n          if (values[0] && !isNaN(values[0])) {\n            searchString = dataTableColumn.dataSrc() + ' ge ' + values[0];\n            if (values[1] && !isNaN(values[1]) && +values[1] >= +values[0]) {\n              searchString = searchString + ' and ' + dataTableColumn.dataSrc() + ' le ' + values[1];\n            }\n          }\n        } else {\n          if (value.indexOf('=') === 0) {\n            value = $.trim(value.replace('=', ''));\n          }\n          if (value) {\n            if (value === 'NULL') {\n              searchString = dataTableColumn.dataSrc() + ' eq null';\n            } else if (value === '!NULL') {\n              searchString = dataTableColumn.dataSrc() + ' ne null';\n            } else if (!isNaN(value)) {\n              searchString = dataTableColumn.dataSrc() + ' eq ' + value;\n            }\n          }\n        }\n      }\n\n      return searchString;\n    },\n\n    stringContains: function stringContains(value, dataTableColumn, index) {\n      var searchString = '';\n\n      if (value) {\n        if (value === 'NULL') {\n          searchString = dataTableColumn.dataSrc() + ' eq null';\n        } else if (value === '!NULL') {\n          searchString = dataTableColumn.dataSrc() + ' ne null';\n        } else {\n          searchString = 'contains(tolower(' + dataTableColumn.dataSrc() + '),\\'' + value.toLowerCase() + '\\')';\n        }\n      }\n\n      return searchString;\n    },\n\n    stringEquals: function stringEquals(value, dataTableColumn, index) {\n      var searchString = '';\n\n      if (value) {\n        if (value === 'NULL') {\n          searchString = dataTableColumn.dataSrc() + ' eq null';\n        } else if (value === '!NULL') {\n          searchString = dataTableColumn.dataSrc() + ' ne null';\n        } else {\n          searchString = 'tolower(' + dataTableColumn.dataSrc() + ') eq \\'' + value.toLowerCase() + '\\'';\n        }\n      }\n\n      return searchString;\n    }\n  }\n});"]}