{"version":3,"sources":["backbone/scripts/odata_model_form_view.min.js"],"names":["ODataModelFormView","Backbone","View","extend","doCancel","e","confirm","preventDefault","doSave","this","$el","find","submit","events","click .btn-cancel","click .btn-save","sections","rows","fields","bindto","id","required","title","type","render","_this","options","arguments","length","undefined","html","template","model","toJSON","form","CotForm","cid","rootPath","_","result","success","save","then","alert","useBinding","setModel","target","Promise","resolve"],"mappings":"AAAA,aAKA,IAAIA,mBAAqBC,SAASC,KAAKC,OAAO,CAC5CC,SAAU,SAAkBC,GAC1B,IAAKC,QAAQ,gEAEX,OADAD,EAAEE,kBACK,GAIXC,OAAQ,SAAgBH,GACtBA,EAAEE,iBACFE,KAAKC,IAAIC,KAAK,QAAQC,UAGxBC,OAAQ,CACNC,oBAAqB,WACrBC,kBAAmB,UAGrBC,SAAU,CAAC,CACTC,KAAM,CAAC,CACLC,OAAQ,CAAC,CACPC,OAAQ,KACRC,GAAI,KACJC,UAAU,EACVC,MAAO,KACPC,KAAM,aAKZC,OAAQ,WACN,IAAIC,EAAQhB,KAERiB,EAA6B,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAElFlB,KAAKC,IAAIoB,KAAKrB,KAAKsB,SAAS,CAAEC,MAAOvB,KAAKuB,MAAMC,YAEhD,IAAIC,EAAO,IAAIC,QAAQ,CACrBf,GAAI,QAAUX,KAAKuB,MAAMI,IACzBC,SAAUC,EAAEC,OAAO9B,KAAM,YACzB+B,QAAS,SAAiBnC,GAKxB,OAJAA,EAAEE,iBACFkB,EAAMO,MAAMS,OAAOC,KAAKhB,EAAQc,SAAW,WACzC,OAAOG,MAAM,aAER,GAETC,YAAY,EACZ5B,SAAUsB,EAAEC,OAAO9B,KAAM,cAQ3B,OALAyB,EAAKW,SAASpC,KAAKuB,OACnBE,EAAKV,OAAO,CACVsB,OAAQrC,KAAKC,IAAIC,KAAK,eAGjBoC,QAAQC,WAGjBX,SAAU,wBAEVN,SAAUO,EAAEP,SAAS","file":"odata_model_form_view.min.js","sourcesContent":["'use strict';\n\n/* global _ Backbone CotForm */\n\n/* exported ODataModelFormView */\nvar ODataModelFormView = Backbone.View.extend({\n  doCancel: function doCancel(e) {\n    if (!confirm('Any changes made will not be saved. Do you want to continue?')) {\n      e.preventDefault();\n      return false;\n    }\n  },\n\n  doSave: function doSave(e) {\n    e.preventDefault();\n    this.$el.find('form').submit();\n  },\n\n  events: {\n    'click .btn-cancel': 'doCancel',\n    'click .btn-save': 'doSave'\n  },\n\n  sections: [{\n    rows: [{\n      fields: [{\n        bindto: 'id',\n        id: 'id',\n        required: true,\n        title: 'ID',\n        type: 'text'\n      }]\n    }]\n  }],\n\n  render: function render() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.$el.html(this.template({ model: this.model.toJSON() }));\n\n    var form = new CotForm({\n      id: 'form_' + this.model.cid,\n      rootPath: _.result(this, 'rootPath'),\n      success: function success(e) {\n        e.preventDefault();\n        _this.model.save().then(options.success || function () {\n          return alert('Saved!');\n        });\n        return false;\n      },\n      useBinding: true,\n      sections: _.result(this, 'sections')\n    });\n\n    form.setModel(this.model);\n    form.render({\n      target: this.$el.find('.cot-form')\n    });\n\n    return Promise.resolve();\n  },\n\n  rootPath: '/* @echo SRC_PATH *//',\n\n  template: _.template('\\n    <div class=\"hidden-print\">\\n      <a href=\"#\" class=\"btn btn-default btn-cancel\">Cancel</a>\\n      <button type=\"button\" class=\"btn btn-default btn-save\">Save</button>\\n    </div>\\n\\n    <div class=\"cot-form\"></div>\\n\\n    <div class=\"hidden-print\">\\n      <a href=\"#\" class=\"btn btn-default btn-cancel\">Cancel</a>\\n      <button type=\"button\" class=\"btn btn-default btn-save\">Save</button>\\n    </div>\\n  ')\n});"]}