{"version":3,"sources":["backbone/scripts/odata_form_view.min.js"],"names":["ODataFormView","Backbone","View","extend","sections","rootPath","template","_","doCancel","e","confirm","preventDefault","doSave","this","$el","find","submit","events","click .btn-cancel","click .btn-save","render","_this","options","arguments","length","undefined","html","model","toJSON","form","CotForm","id","cid","result","success","save","then","alert","useBinding","setModel","target","Promise","resolve"],"mappings":"AAAA,aAMA,IAAIA,cAAgBC,SAASC,KAAKC,OAAO,CAKvCC,SAAU,KAGVC,SAAU,KAGVC,SAAUC,EAAED,SAAS,gaASrBE,SAAU,SAAkBC,GAE1B,IAAKC,QAAQ,gEAEX,OADAD,EAAEE,kBACK,GAQXC,OAAQ,SAAgBH,GACtBA,EAAEE,iBACFE,KAAKC,IAAIC,KAAK,QAAQC,UAIxBC,OAAQ,CACNC,oBAAqB,WACrBC,kBAAmB,UAUrBC,OAAQ,WACN,IAAIC,EAAQR,KAERS,EAA6B,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAElFV,KAAKC,IAAIY,KAAKb,KAAKP,SAAS,CAAEqB,MAAOd,KAAKc,MAAMC,YAEhD,IAAIC,EAAO,IAAIC,QAAQ,CACrBC,GAAI,QAAUlB,KAAKc,MAAMK,IACzB3B,SAAUE,EAAE0B,OAAOpB,KAAM,YACzBqB,QAAS,SAAiBzB,GAKxB,OAJAA,EAAEE,iBACFU,EAAMM,MAAMQ,OAAOC,KAAKd,EAAQY,SAAW,WACzC,OAAOG,MAAM,aAER,GAETC,YAAY,EACZlC,SAAUG,EAAE0B,OAAOpB,KAAM,cAQ3B,OALAgB,EAAKU,SAAS1B,KAAKc,OACnBE,EAAKT,OAAO,CACVoB,OAAQ3B,KAAKC,IAAIC,KAAK,eAGjB0B,QAAQC","file":"odata_form_view.min.js","sourcesContent":["'use strict';\n\n/* global _ Backbone CotForm */\n\n/* exported ODataFormView */\n/** Backbone View subclass to render an oData entity as an interactive form. */\nvar ODataFormView = Backbone.View.extend({\n\n  // PROPERTY DEFINITION\n\n  /** @type {Object[]} */\n  sections: null,\n\n  /** @type {string|function} */\n  rootPath: null,\n\n  /** @type {function} */\n  template: _.template('\\n    <div class=\"hidden-print\">\\n      <a href=\"#\" class=\"btn btn-default btn-cancel\">Cancel</a>\\n      <button type=\"button\" class=\"btn btn-default btn-save\">Save</button>\\n    </div>\\n\\n    <div class=\"cot-form\"></div>\\n\\n    <div class=\"hidden-print\">\\n      <a href=\"#\" class=\"btn btn-default btn-cancel\">Cancel</a>\\n      <button type=\"button\" class=\"btn btn-default btn-save\">Save</button>\\n    </div>\\n  '),\n\n  // EVENT HANDLER DEFINITION\n\n  /**\n   * Handles \"click on cancel button\" event.\n   * @param  {Event} e\n   * @return {[boolean]} Returns false to prevent default behaviour.\n   */\n  doCancel: function doCancel(e) {\n\n    if (!confirm('Any changes made will not be saved. Do you want to continue?')) {\n      e.preventDefault();\n      return false;\n    }\n  },\n\n  /**\n   * Handles \"click on save button\" event.\n   * @param  {Event} e\n   */\n  doSave: function doSave(e) {\n    e.preventDefault();\n    this.$el.find('form').submit();\n  },\n\n  /** Events */\n  events: {\n    'click .btn-cancel': 'doCancel',\n    'click .btn-save': 'doSave'\n  },\n\n  // METHOD DEFINITION\n\n  /**\n   * Render method.\n   * @param  {[Object]} options\n   * @return {Promise}\n   */\n  render: function render() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.$el.html(this.template({ model: this.model.toJSON() }));\n\n    var form = new CotForm({\n      id: 'form_' + this.model.cid,\n      rootPath: _.result(this, 'rootPath'),\n      success: function success(e) {\n        e.preventDefault();\n        _this.model.save().then(options.success || function () {\n          return alert('Saved!');\n        });\n        return false;\n      },\n      useBinding: true,\n      sections: _.result(this, 'sections')\n    });\n\n    form.setModel(this.model);\n    form.render({\n      target: this.$el.find('.cot-form')\n    });\n\n    return Promise.resolve();\n  }\n});"]}